{"version":3,"sources":["assets/logo.svg","assets/Trollface.png","components/common/header.js","views/Home/index.js","components/MemeGenerator/Header.js","views/MemeGenerator/index.js","components/TodoList/TodoItem/index.js","fixtures/todosData.js","views/TodoList/index.js","components/FormTest/index.js","views/FormTest/index.js","container/index.js","serviceWorker.js","index.js"],"names":["module","exports","header","className","to","activeClassName","Home","src","logo","alt","href","target","rel","Header","Trollface","MemeGenerator","state","topText","bottomText","randomImg","allMemeImgs","handleChange","bind","handleSubmit","fetch","then","response","json","memes","data","setState","event","name","value","this","preventDefault","randNum","Math","floor","random","length","randMemeImg","url","onSubmit","type","placeholder","onChange","Component","TodoItem","props","checked","todo","completed","id","style","fontStyle","color","textDecoration","text","todosData","TodoList","todos","prevState","map","todoItems","key","FormComponent","firstName","lastName","age","gender","destination","isVegan","isKosher","isLactoseFree","onClick","isSubmit","FormTest","views","path","exact","component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.1611a3b1.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.ee7cd8ed.svg\";","module.exports = __webpack_public_path__ + \"static/media/Trollface.be324d5b.png\";","import React from 'react'\r\nimport './style.css'\r\nimport { Link, NavLink } from 'react-router-dom'\r\n\r\nexport default function header() {\r\n  return (\r\n    <header className=\"header-fixed\">\r\n      <div className=\"header-limiter\">\r\n        <h1>\r\n          <Link to=\"/\">Company<span>logo</span></Link>\r\n        </h1>\r\n        <nav>\r\n          <NavLink to=\"/todo\" activeClassName=\"selected\">TodoList</NavLink>\r\n          <NavLink to=\"/form\" activeClassName=\"selected\">Form</NavLink>\r\n          <NavLink to=\"/meme\" activeClassName=\"selected\">MemeGenerator</NavLink>\r\n        </nav>\r\n      </div>\r\n    </header>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport logo from '../../assets/logo.svg'\r\nimport './style.css'\r\n\r\nfunction Home() {\r\n  return (\r\n    <div className=\"Home\">\r\n      <div className=\"Home-header\">\r\n        <img src={logo} className=\"Home-logo\" alt=\"logo\" />\r\n        <p>\r\n          Edit <code>src/Home.js</code> and save to reload.\r\n        </p>\r\n        <a\r\n          className=\"Home-link\"\r\n          href=\"https://reactjs.org\"\r\n          target=\"_blank\"\r\n          rel=\"noopener noreferrer\"\r\n        >\r\n          Learn React\r\n        </a>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Home\r\n","import React from 'react'\r\nimport Trollface from '../../assets/Trollface.png'\r\n\r\nconst Header = () => {\r\n  return (\r\n    <div className=\"meme_logo\">\r\n      <img \r\n        src={Trollface} \r\n        alt=\"Trollface\"\r\n      />\r\n      <p>Meme Generator</p>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Header\r\n","import React, {\r\n  Component\r\n} from \"react\"\r\nimport Header from '../../components/MemeGenerator/Header'\r\nimport './style.css'\r\n\r\nclass MemeGenerator extends Component {\r\n  constructor() {\r\n    super()\r\n    this.state = {\r\n      topText: \"\",\r\n      bottomText: \"\",\r\n      randomImg: \"https://i.imgflip.com/1bij.jpg\",\r\n      allMemeImgs: []\r\n    }\r\n    this.handleChange = this.handleChange.bind(this)\r\n    this.handleSubmit = this.handleSubmit.bind(this)\r\n  }\r\n\r\n  componentDidMount() {\r\n    fetch(\"https://api.imgflip.com/get_memes\")\r\n      .then(response => response.json())\r\n      .then(response => {\r\n        const {\r\n          memes\r\n        } = response.data\r\n        this.setState({\r\n          allMemeImgs: memes\r\n        })\r\n      })\r\n  }\r\n\r\n  handleChange(event) {\r\n    const {\r\n      name,\r\n      value\r\n    } = event.target\r\n    this.setState({\r\n      [name]: value\r\n    })\r\n  }\r\n\r\n  handleSubmit(event) {\r\n    event.preventDefault()\r\n    const randNum = Math.floor(Math.random() * this.state.allMemeImgs.length)\r\n    const randMemeImg = this.state.allMemeImgs[randNum].url\r\n    this.setState({\r\n      randomImg: randMemeImg\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"wrapper mt-100\">\r\n        <Header />\r\n        <div className=\"\">\r\n          <form className=\"meme-form\" onSubmit={this.handleSubmit}>\r\n            <input \r\n              type=\"text\"\r\n              name=\"topText\"\r\n              placeholder=\"Top Text\"\r\n              value={this.state.topText}\r\n              onChange={this.handleChange}\r\n            /> \r\n            <input \r\n              type=\"text\"\r\n              name=\"bottomText\"\r\n              placeholder=\"Bottom Text\"\r\n              value={this.state.bottomText}\r\n              onChange={this.handleChange}\r\n            /> \r\n          \r\n            <button>Gen</button>\r\n          </form>\r\n          <div className=\"meme\">\r\n            <img src={this.state.randomImg} alt=\"\" />\r\n            <h2 className=\"top\">{this.state.topText}</h2>\r\n            <h2 className=\"bottom\">{this.state.bottomText}</h2>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default MemeGenerator","import React from 'react'\r\n\r\nfunction TodoItem(props) {\r\n  const completedStyle = {\r\n    fontStyle: \"italic\",\r\n    color: \"#cdcdcd\",\r\n    textDecoration: \"line-through\"\r\n  }\r\n\r\n  return (\r\n      <div className=\"todo-item\">\r\n          <input\r\n            type=\"checkbox\"\r\n            checked={props.todo.completed}\r\n            onChange={() => props.handleChange(props.todo.id)}\r\n          />\r\n          <p style={props.todo.completed ? completedStyle : null}>{props.todo.text}</p>\r\n      </div>\r\n  )\r\n}\r\n\r\nexport default TodoItem\r\n","const todosData = [{\r\n    id: 1,\r\n    text: \"Take out the trash\",\r\n    completed: true\r\n  },\r\n  {\r\n    id: 2,\r\n    text: \"Grocery shopping\",\r\n    completed: false\r\n  },\r\n  {\r\n    id: 3,\r\n    text: \"Clean gecko tank\",\r\n    completed: false\r\n  },\r\n  {\r\n    id: 4,\r\n    text: \"Mow lawn\",\r\n    completed: true\r\n  },\r\n  {\r\n    id: 5,\r\n    text: \"Catch up on Arrested Development\",\r\n    completed: false\r\n  }\r\n]\r\n\r\nexport default todosData","import React, { Component } from 'react'\r\nimport TodoItem from '../../components/TodoList/TodoItem'\r\nimport todosData from \"../../fixtures/todosData\"\r\nimport './style.css'\r\n\r\nclass TodoList extends Component {\r\n  constructor() {\r\n    super()\r\n    this.state = {\r\n      todos: todosData\r\n    }\r\n    this.handleChange = this.handleChange.bind(this)\r\n  }\r\n\r\n  handleChange(id) {\r\n    this.setState(prevState => {\r\n      const updateTodos =  prevState.todos.map(todo => {\r\n        if (todo.id === id) {\r\n          todo.completed = !todo.completed\r\n        }\r\n        return todo\r\n      })\r\n      return {\r\n        todos: updateTodos\r\n      }\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const todoItems = this.state.todos.map(todo => <TodoItem key={todo.id} todo={todo} handleChange={this.handleChange} />)\r\n\r\n    return (\r\n      <div className=\"mt-200\">\r\n        <div className=\"todo-list\">\r\n          {todoItems}\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default TodoList","import React from 'react'\r\n\r\nexport default function FormComponent(props) {\r\n  return (\r\n    <>\r\n      <form>\r\n        <input \r\n          name=\"firstName\" \r\n          value={props.data.firstName} \r\n          onChange={props.handleChange} \r\n          placeholder=\"First Name\" \r\n        />\r\n        <br />\r\n        \r\n        <input \r\n          name=\"lastName\" \r\n          value={props.data.lastName}\r\n          onChange={props.handleChange} \r\n          placeholder=\"Last Name\" \r\n        />\r\n        <br />\r\n        \r\n        <input \r\n          name=\"age\" \r\n          value={props.data.age}\r\n          onChange={props.handleChange} \r\n          placeholder=\"Age\" \r\n        />\r\n        <br />\r\n        \r\n        <label>\r\n          <input \r\n            type=\"radio\" \r\n            name=\"gender\"\r\n            value=\"male\"\r\n            checked={props.data.gender === \"male\"}\r\n            onChange={props.handleChange}\r\n          /> Male\r\n        </label>\r\n        <br />\r\n        \r\n        <label>\r\n          <input \r\n            type=\"radio\" \r\n            name=\"gender\"\r\n            value=\"female\"\r\n            checked={props.data.gender === \"female\"}\r\n            onChange={props.handleChange}\r\n          /> Female\r\n        </label>\r\n        <br />\r\n        \r\n        <select \r\n          value={props.data.destination} \r\n          name=\"destination\" \r\n          onChange={props.handleChange}\r\n        >\r\n          <option value=\"\">-- Please Choose a destination --</option>\r\n          <option value=\"germany\">Germany</option>\r\n          <option value=\"norway\">Norway</option>\r\n          <option value=\"north pole\">North Pole</option>\r\n          <option value=\"south pole\">South Pole</option>\r\n        </select>\r\n        <br />\r\n        \r\n        <label>\r\n          <input \r\n            type=\"checkbox\"\r\n            name=\"isVegan\"\r\n            onChange={props.handleChange}\r\n            checked={props.data.isVegan}\r\n          /> Vegan?\r\n        </label>\r\n        <br />\r\n        \r\n        <label>\r\n          <input \r\n            type=\"checkbox\"\r\n            name=\"isKosher\"\r\n            onChange={props.handleChange}\r\n            checked={props.data.isKosher}\r\n          /> Kosher?\r\n        </label>\r\n        <br />\r\n        \r\n        <label>\r\n          <input \r\n            type=\"checkbox\"\r\n            name=\"isLactoseFree\"\r\n            onChange={props.handleChange}\r\n            checked={props.data.isLactoseFree}\r\n          /> Lactose Free?\r\n        </label>\r\n        <br />\r\n        \r\n        <button onClick={props.handleSubmit}>Submit</button>\r\n      </form>\r\n\r\n      <hr />\r\n      {\r\n        props.isSubmit ?\r\n          <>\r\n            <h2>Entered information:</h2>\r\n            <p>Your name: {props.data.firstName} {props.data.lastName}</p>\r\n            <p>Your age: {props.data.age}</p>\r\n            <p>Your gender: {props.data.gender}</p>\r\n            <p>Your destination: {props.data.destination}</p>\r\n            <p>Your dietary restrictions:</p>\r\n            \r\n            <p>Vegan: {props.data.isVegan ? \"Yes\" : \"No\"}</p>\r\n            <p>Kosher: {props.data.isKosher ? \"Yes\" : \"No\"}</p>\r\n            <p>Lactose Free: {props.data.isLactoseFree ? \"Yes\" : \"No\"}</p>\r\n          </>\r\n          : null\r\n      }\r\n    </>\r\n  )\r\n}\r\n","import React, {\r\n  Component\r\n} from \"react\"\r\nimport FormComponent from '../../components/FormTest'\r\n\r\nclass FormTest extends Component {\r\n  constructor() {\r\n    super()\r\n    this.state = {\r\n      firstName: \"\",\r\n      lastName: \"\",\r\n      age: \"\",\r\n      gender: \"\",\r\n      destination: \"\",\r\n      isVegan: false,\r\n      isKosher: false,\r\n      isLactoseFree: false,\r\n      isSubmit: false,\r\n    }\r\n    this.handleChange = this.handleChange.bind(this)\r\n    this.handleSubmit = this.handleSubmit.bind(this)\r\n  }\r\n\r\n  handleChange(event) {\r\n    const {\r\n      name,\r\n      value,\r\n      type,\r\n      checked\r\n    } = event.target\r\n    type === \"checkbox\" ?\r\n      this.setState({\r\n        [name]: checked\r\n      }) :\r\n      this.setState({\r\n        [name]: value\r\n      })\r\n  }\r\n\r\n  handleSubmit(event) {\r\n    event.preventDefault()\r\n    if (!this.state.isSubmit) {\r\n      this.setState({\r\n        isSubmit: !this.state.isSubmit\r\n      })\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"wrapper\">\r\n        <div className=\"mt-100\">\r\n          <FormComponent\r\n            isSubmit={this.state.isSubmit}\r\n            handleChange={this.handleChange}\r\n            handleSubmit={this.handleSubmit}\r\n            data={this.state}\r\n          />\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default FormTest","import React from 'react'\r\nimport Header from '../components/common/header'\r\nimport Home from '../views/Home'\r\nimport MemeGenerator from '../views/MemeGenerator'\r\nimport TodoList from '../views/TodoList'\r\nimport FormTest from '../views/FormTest'\r\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom'\r\n\r\nconst views = () => {\r\n  return (\r\n    <Router>\r\n      <>\r\n        <Header />\r\n        <Switch>\r\n          <Route path=\"/\" exact component={Home} />\r\n          <Route path=\"/todo\" component={TodoList} />\r\n          <Route path=\"/form\" component={FormTest} />\r\n          <Route path=\"/meme\" component={MemeGenerator} />\r\n        </Switch>\r\n      </>\r\n    </Router>\r\n  )\r\n}\r\n\r\nexport default views\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport './index.css'\r\nimport Container from './container'\r\nimport * as serviceWorker from './serviceWorker'\r\n\r\nReactDOM.render(<Container />, document.getElementById('root'))\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister()\r\n"],"sourceRoot":""}